<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
  http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


  <rabbit:connection-factory id="optaConsumerConnectionFactory"
                             addresses="#{aMQPAddressesProvider.getAddress()}"
                             publisher-confirms="false"
                             publisher-returns="false"
                             channel-cache-size="20"
                             username="${opta-bridge.rabbit.username}"
                             password="#{decrypter.decryptFromBase64String(keyProvider,'${opta-bridge.rabbit.password}')}"
                             virtual-host="${opta-bridge.rabbit.virtual.host}"/>

  <rabbit:admin id="sdcnqOptaRabbitAdmin" connection-factory="optaConsumerConnectionFactory" />

  <rabbit:direct-exchange name="${exc.opta.feed}"  declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:bindings>
      <rabbit:binding queue="${que.opta.F4}" key="${routing.key.F4}"/>
      <rabbit:binding queue="${que.opta.F4p}" key="${routing.key.F4p}"/>
      <rabbit:binding queue="${que.opta.F8}" key="${routing.key.F8}"/>
      <rabbit:binding queue="${que.opta.F9}" key="${routing.key.F9}"/>
      <rabbit:binding queue="${que.opta.F13}" key="${routing.key.F13}"/>
      <rabbit:binding queue="${que.opta.F15}" key="${routing.key.F15}"/>
      <rabbit:binding queue="${que.opta.F24}" key="${routing.key.F24}"/>
      <rabbit:binding queue="${que.opta.F27}" key="${routing.key.F27}"/>
      <rabbit:binding queue="${que.opta.F28}" key="${routing.key.F28}"/>
      <rabbit:binding queue="${que.opta.F30}" key="${routing.key.F30}"/>
      <rabbit:binding queue="${que.opta.F70}" key="${routing.key.F70}"/>
      <rabbit:binding queue="${que.opta.F72}" key="${routing.key.F72}"/>
      <rabbit:binding queue="${que.opta.F73}" key="${routing.key.F73}"/>
    </rabbit:bindings>
  </rabbit:direct-exchange>

  <rabbit:queue name="${que.opta.F4}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F4p}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F8}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F9}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F13}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F15}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F24}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F27}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F28}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F30}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F70}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F72}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:queue name="${que.opta.F73}" durable="true" auto-declare="true" declared-by="sdcnqOptaRabbitAdmin">
    <rabbit:queue-arguments>
      <entry key="x-ha-policy">
        <value type="java.lang.String">all</value>
      </entry>
    </rabbit:queue-arguments>
  </rabbit:queue>

</beans>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/integration
                  http://www.springframework.org/schema/integration/spring-integration.xsd
                  http://www.springframework.org/schema/integration/amqp
                  http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
                  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <bean id="formatConverterString" class="ptv.feed.sdc.sender.messaging.FormatConverterString" />

  <bean id="httpCloudAddressesProvider" class="ptv.feed.sdc.sender.config.AddressProviderImpl">
  	<property name="address" value="${cloud.urls}" />
  </bean>

  <util:map id="feedRoutings">
    <entry key="st1" value="#{T(ptv.feed.sdc.sender.config.Routing).VALDE.getKey()}"/>
  </util:map>

  <bean id="routingResolver" class="ptv.feed.sdc.sender.config.RoutingResolver">
    <constructor-arg name="feedRoutings" ref="feedRoutings" />
  </bean>

  <bean id="cloudSenderConfigurer" class="ptv.feed.sdc.sender.config.CloudSenderConfigurer">
    <property name="cloudUrls" value="#{httpCloudAddressesProvider.getAddress()}" />
    <property name="senderContextPath" value="${cloud.context.path}" />
    <property name="valdeSenderContextPath" value="${valde.cloud.context.path}" />
    <property name="senderExchange" value="${exc.sender}" />
    <property name="senderExchangeError" value="${exc.sender.error}" />
    <property name="senderQueuePrefix" value="${que.sender.prefix}" />
    <property name="senderQueueErrorExclusive" value="${que.sender.error.exclusive}" />
    <property name="configLocations" value="${sender.configLocations}" />
    <property name="cloudRequestConnectTimeout" value="${cloud.request.connect.timeout}" />
    <property name="cloudRequestReadTimeout" value="${cloud.request.read.timeout}" />
    <property name="cloudBindings" value="${cloud.bindings}"/>
  </bean>

  <int:channel id="senderStringChannel" />

  <int:chain input-channel="senderStringChannel">
    <int-amqp:outbound-channel-adapter amqp-template="senderRabbitTemplate"
                                       exchange-name="${exc.sender}" mapped-request-headers="valde_*,oc_*,sdc_*,X-*,stamp_uuid,last_updated,content-type,__TypeId__,json__TypeId__"
                                       routing-key-expression="@routingResolver.getRouting(headers)" />
  </int:chain>

</beans>
